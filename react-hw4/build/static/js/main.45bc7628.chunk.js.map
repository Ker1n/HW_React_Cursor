{"version":3,"sources":["components/entrancePage/padlock.svg","components/entrancePage/help.png","components/SuccessPage/succes.jpg","components/entrancePage/SignIn/SignIn.js","components/entrancePage/SignUp/SignUp.js","components/Page404/undefinedPage.js","components/SuccessPage/SuccessPage.js","components/entrancePage/EntrancePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignIn","state","email","password","rememberUser","validity","handleChange","field","event","target","value","setState","checkBoxRememberMe","mail","localStorage","getItem","pass","emailInput","document","getElementById","passwordInput","style","borderColor","className","src","Icon","alt","id","type","placeholder","onChange","this","bind","name","onClick","onDoubleClick","to","Component","nameRegExp","passwordRegEx","emailRegEx","SignUp","firstName","lastName","mailing","firstNameValid","lastNameValid","emailValid","passwordValid","test","checkMailing","completionOfSignUp","setItem","data-title","Help","props","UndefinedPage","class","SuccessPage","SuccessImage","EntrancePage","path","exact","render","component","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45bc7628.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/padlock.d964e0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.7dea2ccf.png\";","module.exports = __webpack_public_path__ + \"static/media/succes.58b149e3.jpg\";","import React, {Component} from 'react';\r\nimport Icon from './../padlock.svg';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { fade } from '@material-ui/core';\r\n\r\n\r\nclass SignIn extends Component { \r\n\r\n    state = { \r\n        email: \"\",\r\n        password: \"\",\r\n        rememberUser: false,\r\n        validity: false,\r\n    }\r\n\r\n\r\n    handleChange  = (field, event) => { \r\n        const target = event.target.value;\r\n        this.setState({ \r\n            [field]: target\r\n        })\r\n    }\r\n    \r\n\r\n    checkBoxRememberMe = () => { \r\n        if (!this.state.rememberUser) { \r\n            this.setState ({ \r\n                rememberUser: true\r\n            })\r\n        } else if (this.state.rememberUser) { \r\n            this.setState ({ \r\n                rememberUser: false\r\n            })\r\n        }\r\n    }\r\n\r\n    SignIn = () => { \r\n        let mail = localStorage.getItem(\"mail\")\r\n        let pass = localStorage.getItem(\"password\")\r\n        let emailInput = document.getElementById(\"emailInput\")\r\n        let passwordInput = document.getElementById(\"passwordInput\")\r\n        emailInput.style.borderColor = 'red'\r\n        passwordInput.style.borderColor = 'red'\r\n        if (this.state.email === mail){ \r\n            emailInput.style.borderColor = 'green'\r\n            if (this.state.password === pass){ \r\n                passwordInput.style.borderColor = 'green'\r\n                this.setState({\r\n                    validity : true\r\n                })\r\n            } \r\n        } \r\n           \r\n    }\r\n\r\n    // test = () => { \r\n    //     let emailInput = document.getElementById(\"emailInput\")\r\n    //     let passwordInput = document.getElementById(\"passwordInput\")\r\n    //     console.log(emailInput);\r\n    //     console.log(passwordInput);\r\n    // }\r\n\r\n\r\n    render () { \r\n        return ( \r\n            <div className=\"signIn-wrapper\">\r\n                <div className=\"signIn-body\">                   \r\n                        <img src={Icon} alt=\"icon\" id= \"lockImg\" />\r\n                        <input type=\"text\" placeholder='Email' id=\"emailInput\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.email} />\r\n                        <input type=\"password\" placeholder='Password' id='passwordInput' onChange={this.handleChange.bind (this, 'password')} value = {this.state.password} />\r\n                        <div className=\"remind\">\r\n                        <input type=\"checkbox\" name=\"spam\" className=\"remember\" onClick = {this.checkBoxRememberMe} />\r\n                        <div className = \"checkBox-text\" >Remember me</div>\r\n                        </div> \r\n                        {(this.state.validity) ? <button className = 'btn' type=\"button\" onDoubleClick = {this.SignIn}><NavLink to='/success'>Sign In</NavLink></button>\r\n                                               : <button className = 'btn' type=\"button\" onClick = {this.SignIn}>Sign In</button>}\r\n                        <div className = \"entrancePage-nav\"><span><NavLink to=\"reset\">Forgot password?</NavLink></span><span><NavLink to='/signUp'>Don't have an account? Sign Up</NavLink></span></div>                  \r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\n\r\nexport default SignIn\r\n","import React, {Component} from \"react\";\r\nimport Icon from \"./../padlock.svg\";\r\nimport Help from './../help.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst nameRegExp = /^[a-zA-Zа-яА-Я]{3,}/i;\r\nconst passwordRegEx = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}/;\r\nconst emailRegEx =  /^([a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]{3,})+@([a-zA-Z0-9-]{2,})+\\.([a-zA-Z0-9-]{2,})$/;\r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        mailing: false,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        emailValid: false,\r\n        passwordValid: false,\r\n        \r\n    }\r\n            \r\n\r\n    handleChange  = (field, event) => { \r\n        const target = event.target.value;\r\n\r\n        this.setState({ \r\n            [field]: target\r\n        })\r\n        event.target.style.borderColor = 'green';\r\n        if (field === 'email') { \r\n            let email = emailRegEx.test(target);\r\n            if (!email) event.target.style.borderColor = 'red';           \r\n        } \r\n        else if (field === 'password') {\r\n            let pass = passwordRegEx.test(target);\r\n            if (!pass) event.target.style.borderColor = 'red';\r\n        }\r\n        else if (field === 'firstName' || field === 'lastName') {\r\n            let fullName = nameRegExp.test(target);\r\n            if (!fullName) {event.target.style.borderColor = 'red'};              \r\n        }   \r\n\r\n        if(emailRegEx.test(this.state.email)) {this.setState({emailValid:true})}\r\n        if(passwordRegEx.test(this.state.password)) {this.setState({passwordValid:true})}\r\n        if(nameRegExp.test(this.state.firstName)) {this.setState({firstNameValid:true})}\r\n        if(nameRegExp.test(this.state.lastName)) {this.setState({lastNameValid:true})}\r\n           \r\n    }\r\n\r\n\r\n    checkMailing = () => { \r\n        if (!this.state.mailing) { \r\n            this.setState ({ \r\n                mailing: true\r\n            })\r\n        } else if (this.state.mailing) { \r\n            this.setState ({ \r\n                mailing: false\r\n            })\r\n        }\r\n    }\r\n\r\n    completionOfSignUp  = () => { \r\n        let {firstNameValid} = this.state;\r\n        let {lastNameValid} = this.state;\r\n        let {emailValid} = this.state;\r\n        let {passwordValid} = this.state;\r\n\r\n        if (firstNameValid) {\r\n            if (lastNameValid) { \r\n                if (emailValid) { \r\n                    if (passwordValid) {\r\n                        localStorage.setItem('mail', this.state.email);\r\n                        localStorage.setItem('password', this.state.password);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"signIn-wrapper\">\r\n            <div className=\"signIn-body\">\r\n                    <img src={Icon} alt=\"icon\" id= \"lockImg\" />\r\n                    <h3>Sign Up</h3>\r\n                    <input type=\"text\" placeholder=\"First name\"   value = {this.state.firstName} onChange = {this.handleChange.bind(this, \"firstName\")}/>\r\n                    <input type=\"text\" placeholder=\"Last name\"    value = {this.state.lastName}  onChange = {this.handleChange.bind(this, \"lastName\")} />\r\n                    <input type=\"text\" placeholder=\"Email\"        value = {this.state.email}     onChange = {this.handleChange.bind(this, \"email\")}    />\r\n                    <div className=\"signIn-password\" id=\"pass\" data-title=\"Софийский собор\">\r\n                    <input type=\"password\" placeholder=\"Password\" value = {this.state.password}  onChange = {this.handleChange.bind(this, \"password\")}  />  \r\n                    <div className = \"password-help\" data-title=\"Password must have at least 8 characters, number, uppercase and lowercase letter\">\r\n                    <img src={Help} alt=\"help\" id=\"help-img\" /></div>\r\n                    </div>               \r\n                    <div className=\"remind\">\r\n                    <input type=\"checkbox\" name=\"spam\" className=\"spam\" id='mailing' onClick = {this.checkMailing} />\r\n                    <div className = \"checkBox-text\">I want to receive inspiration, marketing promotions and updates via email.</div>\r\n                    </div>\r\n                    {/* <button onClick = {()=> { console.log(this.state.emailValid)}}></button> */}\r\n                    <button className = \"btn\" type=\"button\" onClick={this.completionOfSignUp} ><NavLink to='/' state= {this.props.state}>Sign Up</NavLink></button>\r\n                    <div className = \"entrancePage-nav\"><span><NavLink to=\"reset\">Forgot password?</NavLink></span><span><NavLink to='/'>Do have an account? Sign In</NavLink></span></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport './undefinedPage.css';\r\n\r\nconst UndefinedPage = () => {\r\n    return ( \r\n        <div class=\"outer-track\">\r\n        <div class=\"inner-track\">\r\n          <div class=\"tractor-container\">\r\n            <div class=\"tractor\">\r\n              <div class=\"body\">\r\n                <div class=\"light\"></div>\r\n                <div class=\"grill\"></div>\r\n                <div class=\"exhaust\"></div>\r\n                <div class=\"steering\"></div>\r\n                <div class=\"seat\"></div>\r\n                <div class=\"wheel-front\"></div>\r\n                <div class=\"fender\"></div>\r\n                <div class=\"wheel-back\"></div>\r\n                <div class=\"hitch\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"rope\"></div>\r\n          <div class=\"tractor-container\">\r\n            <div class=\"tractor\">\r\n              <div class=\"body\">\r\n                <div class=\"light\"></div>\r\n                <div class=\"grill\"></div>\r\n                <div class=\"exhaust\"></div>\r\n                <div class=\"steering\"></div>\r\n                <div class=\"seat\"></div>\r\n                <div class=\"wheel-front\"></div>\r\n                <div class=\"fender\"></div>\r\n                <div class=\"wheel-back\"></div>\r\n                <div class=\"hitch\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n} \r\nexport default UndefinedPage\r\n","import React from 'react';\r\nimport SuccessImage from './succes.jpg';\r\nimport './SuccessPage.css'\r\n\r\nconst SuccessPage = () => { \r\n    return <div className = 'success-Image'><img src={SuccessImage} alt=\"SuccessPage\"/></div>\r\n}\r\n\r\nexport default SuccessPage","import React from 'react';\r\nimport SignIn from './SignIn/SignIn';\r\nimport SignUp from './SignUp/SignUp';\r\nimport './EntrancePage.css';\r\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\r\nimport UndefinedPage from '../Page404/undefinedPage'\r\nimport SuccessPage from './../SuccessPage/SuccessPage'\r\n\r\n\r\n\r\nconst EntrancePage = () => { \r\n\r\n\r\n    return ( \r\n        <div className=\"EntrancePage\"> \r\n        <BrowserRouter> \r\n        <Switch>\r\n            <Route path = \"/\"  exact  render = {() => <SignIn /> } />\r\n            <Route path = \"/signUp\" exact  render = {() => <SignUp /> } />\r\n            <Route path = \"/success\" exact  render = {() => <SuccessPage /> } />\r\n            <Route   component= {() => <UndefinedPage />} />\r\n        </Switch>   \r\n        </BrowserRouter>  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EntrancePage\r\n","import React from 'react';\nimport EntrancePage from './components/entrancePage/EntrancePage'\n\nconst App = () => {\n    return ( \n        <div className=\"App\">\n            <EntrancePage />\n        </div>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}